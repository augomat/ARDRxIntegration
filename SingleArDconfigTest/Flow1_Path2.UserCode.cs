///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Reporting;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace SingleArDconfigTest
{
    public partial class Flow1_Path2
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void Record2Usercode()
        {
        	TestReport.BeginTestCase("Flow1_Path2");
        	
        	try {
        		TestReport.BeginTestModule("Flow1_Path2_Block1");
	        	Report.Info("Flow1 Path2 Block1 (only block)");
	        	Report.Info("THis is it!");
	        	Report.Info("THis is it!");
	        	Report.Info("THis is it!");
	        	Report.Info("THis is it!");
	        	Report.Info("THis is it!");
	        	Report.Info("THis is it!");
	        	
	        	var nonExistingElement = repo.Explorer.NonExistingElement;
	        	//Validate.IsTrue(false);
	        	
	        	TestReport.EndTestModule();
        	}
			catch (Exception e) {
        		RanorexCoreReflectionHelper.HandleError(e);
        	}
        	finally {
        		TestReport.EndTestModule();
        		TestReport.BeginTestCaseTeardown();
        		
        		TestReport.BeginTestModule("Flow1_Path2_Teardown");
        		Report.Info("There goes the Teardown");
        		TestReport.EndTestModule();
        		
        		TestReport.EndTestCaseTeardown();
        		
        		TestReport.EndTestCase();	
        	}	
        }
    }
}
