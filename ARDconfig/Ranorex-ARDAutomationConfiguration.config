<?xml version="1.0" encoding="UTF-8"?>
<AutomationConfiguration>
    <AutomationLayers>
        <AutomationLayer>
            <Id>0</Id>
            <Guid>7f10d0cbed044e7c97fca9e2d6c7fd88</Guid>
            <Name>Default</Name>
            <Objects>
                <Object>
                    <ObjectType>1_ModuleSetup</ObjectType>
                    <ObjectActions>
                        <Action ActionName="1 - Module Header" CodeSnippet="using System;&#10;using System.Collections.Generic;&#10;using System.Text;&#10;using System.Text.RegularExpressions;&#10;using System.Drawing;&#10;using System.Threading;&#10;using WinForms = System.Windows.Forms;&#10;using Ranorex;&#10;using Ranorex.Core;&#10;using Ranorex.Core.Testing;&#10;&#10;namespace ~Project~&#10;{&#10;public class ##Title[f1]##&#10;{&#10;public ##Title[f1]##(){}&#10;public static ~Project~Repository repo = ~Project~Repository.Instance;&#10;void Run()&#10;{&#10;Mouse.DefaultMoveTime = ~MoveTime~;&#10;Keyboard.DefaultKeyPressTime = ~KeyPressTime~;&#10;Delay.SpeedFactor = ~SpeedFactor~;&#10;"/>
                        <Action ActionName="2 - Begin Setup" CodeSnippet="// Setup&#10;bool setupPassed = false;&#10;try {&#10;"/>
                        <Action ActionName="3 - End Setup" CodeSnippet="setupPassed = true;&#10;}&#10;if(!setupPassed)&#10;{&#10;// CSVOut : Setup Failed&#10;}&#10;"/>
                        <Action ActionName="4 - Begin Script" CodeSnippet="// Modules&#10;try{&#10;"/>
                        <Action ActionName="5 - End Script" CodeSnippet="// CSVOut TC Successful&#10;}&#10;"/>
                        <Action ActionName="6 - Begin Teardown" CodeSnippet="// Teardown&#10;catch (Exception e)&#10;{&#10;try {&#10;// Teardown block 1&#10;"/>
                        <Action ActionName="7 - End Teardown" CodeSnippet="}&#10;catch (Exception e1) { } // Swallow&#10;// CSVout TC failed&#10;}&#10;"/>
                        <Action ActionName="8 - Module Footer" CodeSnippet="        &#9;TestReport.SaveReport();&#10;} // End ITestModule.Run&#10;&#10;&#10;private static TestResult HandleError(Exception ex)&#10;{&#10;ActivityStack.Current.Status = ActivityStatus.Failed;&#10;ActivityStack.Current.ErrorMessage = ex.Message;&#10;ReportError(ex);&#10;return TestResult.Failed;&#10;}&#10;&#10;private static void ReportError(Exception ex)&#10;{&#10;var metaData = new SimpleReportMetadata(&quot;stacktrace&quot;, ex.StackTrace);&#10;string codeFile; int codeLine;&#10;if (GetFileInfoFromException(ex, out codeFile, out codeLine,&#10;new string[] { &quot;.RepoItemInfo&quot;, &quot;RepositoryFolders&quot;, &quot;Repository.get&quot; }))&#10;metaData = metaData.Add(&quot;codefile&quot;, codeFile).Add(&quot;codeline&quot;, codeLine.ToString());&#10;var message = GetExceptionFullMessage(ex, &quot;\r\n&quot;);&#10;if (ex is ValidationException)&#10;message = &quot;Module execution was aborted because a validation step has failed. &quot; + message;&#10;string encMessage = message;&#10;var rxEx = ex as RanorexException;&#10;Report.LogHtml(ReportLevel.Error, &quot;Module&quot;, encMessage, metaData, rxEx != null ? rxEx.GetReportMetadata() : null);&#10;}&#10;&#10;public static string GetExceptionFullMessage(Exception ex, string delimiter)&#10;{&#10;var sb = new StringBuilder();&#10;Exception current = ex;&#10;while (current != null)&#10;{&#10;sb.Append(current.Message);&#10;sb.Append(delimiter);&#10;current = current.InnerException;&#10;}&#10;if (sb.Length &gt; 0)&#10;sb.Remove(sb.Length - delimiter.Length, delimiter.Length);&#10;return sb.ToString();&#10;}&#10;&#10;}&#10;}&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>2_TestStep</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Begin TestCase" CodeSnippet="TestReport.BeginTestCase(&quot;##GLOBAL_PATH_REF##&quot;);&#10;"/>
                        <Action ActionName="Begin TestModule" CodeSnippet="TestReport.BeginTestModule(&quot;##Block Name (Test Step)[b0]##&quot;);&#10;"/>
                        <Action ActionName="End TestCase" CodeSnippet="TestReport.EndTestCase();&#10;"/>
                        <Action ActionName="End TestModule" CodeSnippet="TestReport.EndTestModule();&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>__Class-Wrapper</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Footer" CodeSnippet="&#9;}&#10;}&#10;"/>
                        <Action ActionName="Header" CodeSnippet="using System;&#10;using System.Collections.Generic;&#10;using System.Text;&#10;using System.Text.RegularExpressions;&#10;using System.Drawing;&#10;using System.Threading;&#10;using WinForms = System.Windows.Forms;&#10;using Ranorex;&#10;using Ranorex.Core;&#10;using Ranorex.Core.Testing;&#10;&#10;namespace ~ProjectName~.Recordings&#10;{&#10;&#9;// Test Case Class&#10;&#9;[TestModule(&quot;##Path Name[p1]##&quot;, ModuleType.UserCode, 1)]&#10;&#9;public class ##Path Name[p1]## : ITestModule&#10;&#9;{&#10;&#9;&#9;/// &lt;summary&gt;&#10;&#9;&#9;/// Constructs a new instance.&#10;&#9;&#9;/// &lt;/summary&gt;&#10;&#9;&#9;public ##Path Name[p1]##()&#10;&#9;&#9;{&#10;&#9;&#9;&#9;// Do not delete - a parameterless constructor is required!&#10;&#9;&#9;}&#10;&#9;&#9;public static ~ProjectName~.~RepoName~ repo = ~ProjectName~.~RepoName~.Instance;&#10;&#9;&#9;/// &lt;summary&gt;&#10;&#9;&#9;/// Performs the playback of actions in this module.&#10;&#9;&#9;/// &lt;/summary&gt;&#10;&#9;&#9;/// &lt;remarks&gt;You should not call this method directly, instead pass the module&#10;&#9;&#9;/// instance to the &lt;see cref=&quot;TestModuleRunner.Run(ITestModule)&quot;/&gt; method&#10;&#9;&#9;/// that will in turn invoke this method.&lt;/remarks&gt;&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>__FullHeaderFooter-Wrapper</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Footer" CodeSnippet="&#10;&#9;&#9;}&#10;&#9;}&#10;}&#10;"/>
                        <Action ActionName="Header" CodeSnippet="using System;&#10;using System.Collections.Generic;&#10;using System.Text;&#10;using System.Text.RegularExpressions;&#10;using System.Drawing;&#10;using System.Threading;&#10;using WinForms = System.Windows.Forms;&#10;using Ranorex;&#10;using Ranorex.Core;&#10;using Ranorex.Core.Testing;&#10;&#10;namespace ~ProjectName~.Recordings&#10;{&#10;&#9;[TestModule(&quot;##Path Name[p1]##&quot;, ModuleType.UserCode, 1)]&#10;&#9;public class ##Path Name[p1]## : ITestModule&#10;&#9;{&#10;&#9;&#9;public ##Path Name[p1]##()&#10;&#9;&#9;{&#10;&#9;&#9;}&#10;&#9;&#9;public static ~ProjectName~.~RepoName~ repo = ~ProjectName~.~RepoName~.Instance;&#10;&#9;&#9;void ITestModule.Run()&#10;&#9;&#9;{&#10;&#10;"/>
                        <Action ActionName="Settings" CodeSnippet="Mouse.DefaultMoveTime = ~MoveTime~;&#10;Keyboard.DefaultKeyPressTime = ~KeyPressTime~;&#10;Delay.SpeedFactor = ~SpeedFactor~;&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>__TestModule-Wrapper</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Footer" CodeSnippet="&#9;&#9;}&#10;"/>
                        <Action ActionName="Header" CodeSnippet="&#9;&#9;void ITestModule.Run()&#10;&#9;&#9;{&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>_Code</ObjectType>
                    <ObjectActions>
                        <Action ActionName="CommentGrouping::Begin" CodeSnippet="// --- ========= ~Name~ ========= ---&#10;"/>
                        <Action ActionName="CommentGrouping::End" CodeSnippet="// --- ================================= ---&#10;"/>
                        <Action ActionName="Create List" CodeSnippet="IList&lt;~Type~&gt; ~ListName~ = "/>
                        <Action ActionName="Else Statement" CodeSnippet="else&#10;"/>
                        <Action ActionName="For Loop" CodeSnippet="for(int ~var~ = 0; ~var~ &lt; ~Number~; ++~var~)&#10;"/>
                        <Action ActionName="If Statement::Begin" CodeSnippet="if("/>
                        <Action ActionName="If Statement::End" CodeSnippet=")&#10;"/>
                        <Action ActionName="Scope::Begin" CodeSnippet="{&#10;"/>
                        <Action ActionName="Scope::End" CodeSnippet="}&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Adapter</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Find Object" CodeSnippet="Ranorex.Adapter item = null;&#10;// Try to find a cell object  &#10;bool ~found~ = false;  &#10;~found~ = Host.Local.TryFindSingle&lt;Ranorex.Adapter&gt;(&quot;##OBJ_NAME##&quot;, 2000, out item);  &#10;// If the expressions does not return an object  &#10;// call Validate.Fail and the test case fails  &#10;if (!~found~) Validate.Fail(&quot;Ranorex path: ##OBJ_NAME## with no return&quot;);  &#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Appfolder</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Close" CodeSnippet="##OBJ_NAME##.Self.Close();&#10;"/>
                        <Action ActionName="Maximize" CodeSnippet="##OBJ_NAME##.Self.Maximize();&#10;"/>
                        <Action ActionName="Minimize" CodeSnippet="##OBJ_NAME##.Self.Minimize();&#10;"/>
                        <Action ActionName="Restore" CodeSnippet="##OBJ_NAME##.Self.Restore();&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Application</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Open Application" CodeSnippet="// Open Application&#10;Report.Log(ReportLevel.Info, &quot;Application&quot;, &quot;Run application '~ExecutablePath~' with arguments '' in normal mode.&quot;, new RecordItemIndex(0));&#10;Host.Local.RunApplication(&quot;~ExecutablePath~&quot;, &quot;&quot;, &quot;~ExecutableFolder~&quot;, false);&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Atag</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Click" CodeSnippet="##OBJ_NAME##.Click();&#10;"/>
                        <Action ActionName="Validate Exists" CodeSnippet="Validate.Exists(##OBJ_NAME##);&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Button</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Click" CodeSnippet="##OBJ_NAME##.Click();&#10;"/>
                        <Action ActionName="Double Click" CodeSnippet="##OBJ_NAME##.DoubleClick();&#10;"/>
                        <Action ActionName="Validate Exists" CodeSnippet="Validate.Exists(##OBJ_NAME##);&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Cell</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Click" CodeSnippet="##OBJ_NAME##.Click();&#10;"/>
                        <Action ActionName="Press Keys" CodeSnippet="##OBJ_NAME##.PressKeys(&quot;~Keys~&quot;);&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Checkbox</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Set Checked" CodeSnippet="##OBJ_NAME##.Check();&#10;"/>
                        <Action ActionName="Set UnChecked" CodeSnippet="##OBJ_NAME##.Uncheck();&#10;"/>
                        <Action ActionName="Validate Exists" CodeSnippet="Validate.Exists(##OBJ_NAME##);&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Combobox</ObjectType>
                    <ObjectActions/>
                </Object>
                <Object>
                    <ObjectType>Delay</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Delay:Milliseconds" CodeSnippet="Delay.Milliseconds(~Milliseconds~);&#10;"/>
                        <Action ActionName="SetSpeedFactor" CodeSnippet="Delay.SpeedFactor = ~FloatValue~;&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Divtag</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Click" CodeSnippet="##OBJ_NAME##.Click();&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Host</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Open Browser" CodeSnippet="            Host.Local.OpenBrowser(&quot;~PageAddress~&quot;, &quot;~BrowserName~&quot;, &quot;~BrowserArgs~&quot;, ~KillExisting~, ~Maximised~, ~ClearCache~, ~IncognitoMode~, ~ClearCookies~);&#10;            "/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Inputtag</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Click" CodeSnippet="##OBJ_NAME##.Click();&#10;"/>
                        <Action ActionName="PressKeys" CodeSnippet="##OBJ_NAME##.PressKeys(&quot;~Keys~&quot;);&#10;"/>
                        <Action ActionName="Validate Exists" CodeSnippet="Validate.Exists(##OBJ_NAME##);&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Keyboard</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Press Keys" CodeSnippet="Keyboard.Press(&quot;~KeySequence~&quot;);&#10;"/>
                        <Action ActionName="Select All" CodeSnippet="Keyboard.Press(&quot;{END}{SHIFT DOWN}{HOME}{SHIFT UP}{DELETE}&quot;);&#10;"/>
                        <Action ActionName="SetDefaultKeyPressTime" CodeSnippet="&#9;&#9;&#9;Keyboard.DefaultKeyPressTime = ~Milliseconds~;&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Label</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Contains Text (bool)" CodeSnippet="##OBJ_NAME##.TextValue.Contains(&quot;~Text~&quot;)"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Litag</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Validate Exists" CodeSnippet="Validate.Exists(##OBJ_NAME##);&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Menuitem</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Click" CodeSnippet="##OBJ_NAME##.Click();&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Mouse</ObjectType>
                    <ObjectActions>
                        <Action ActionName="SetDefaultMoveTime" CodeSnippet="&#9;&#9;&#9;Mouse.DefaultMoveTime = ~Milliseconds~;&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Object Location Prefix</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Folder + Object" CodeSnippet="&#9;&#9;&#9;~CommonFolder~.~Object~."/>
                        <Action ActionName="Folder + Subfolder + Object" CodeSnippet="&#9;&#9;&#9;~CommonFolder~.~Subfolder~.~Object~."/>
                        <Action ActionName="Object" CodeSnippet="&#9;&#9;&#9;~ObjectPath~."/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Report</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Log:Error" CodeSnippet="Report.Log(ReportLevel.Error,&quot;~Message~&quot;);&#10;"/>
                        <Action ActionName="Log:Failure" CodeSnippet="Report.Log(ReportLevel.Failure,&quot;~Message~&quot;);&#10;"/>
                        <Action ActionName="Log:Info" CodeSnippet="Report.Log(ReportLevel.Info,&quot;~Message~&quot;);&#10;"/>
                        <Action ActionName="Log:Success" CodeSnippet="Report.Log(ReportLevel.Success,&quot;~Message~&quot;);&#10;"/>
                        <Action ActionName="Log:Warn" CodeSnippet="Report.Log(ReportLevel.Warn,&quot;~Message~&quot;);&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Row</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Cells;" CodeSnippet="Cells;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Spantag</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Validate Exists" CodeSnippet="Validate.Exists(##OBJ_NAME##);&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Table</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Rows" CodeSnippet="Rows;&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Tabpage</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Click" CodeSnippet="##OBJ_NAME##.Click();&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Text</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Click" CodeSnippet="##OBJ_NAME##.Click();&#10;"/>
                        <Action ActionName="Condition: Exists" CodeSnippet="if(##OBJ_NAME##Info.Exists(~WaitTime~))&#10;"/>
                        <Action ActionName="Contains Text (bool)" CodeSnippet="##OBJ_NAME##.TextValue.Contains(&quot;~Text~&quot;)"/>
                        <Action ActionName="Press Keys" CodeSnippet="##OBJ_NAME##.PressKeys(&quot;~Keys~&quot;);&#10;"/>
                        <Action ActionName="Validate Exists" CodeSnippet="Validate.Exists(##OBJ_NAME##);&#10;"/>
                    </ObjectActions>
                </Object>
                <Object>
                    <ObjectType>Webdocument</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Close Document" CodeSnippet="// Close Browser : Object name, ##OBJ_NAME## is the root path.&#10;IList&lt;Ranorex.WebDocument&gt; webList = Host.Local.Find&lt;Ranorex.WebDocument&gt;(##OBJ_NAME##.BasePath);&#10;foreach (Ranorex.WebDocument webdoc in webList)&#10;{  &#10;  webdoc.Close();&#10;}"/>
                    </ObjectActions>
                </Object>
            </Objects>
            <PreviewDetails>
                <SaveFileLocation></SaveFileLocation>
                <RunFileLocation></RunFileLocation>
                <EditLanguage>3</EditLanguage>
                <EditTheme>6</EditTheme>
                <EditorType>0</EditorType>
                <FromFileStructure>True</FromFileStructure>
                <MapFromBlockAttributes/>
            </PreviewDetails>
            <ExportSettings>
                <FileConfiguration>43</FileConfiguration>
                <FileNamingSystem>0</FileNamingSystem>
                <FileNameVariable></FileNameVariable>
                <FilePrefix></FilePrefix>
                <FileExtension>.txt</FileExtension>
                <ExtensionSettings/>
                <PreviewHeaderFooter>
                    <Header>
                        <Automation>
                            <ObjectName></ObjectName>
                            <LayerId>7f10d0cbed044e7c97fca9e2d6c7fd88</LayerId>
                            <ObjectType>1_ModuleSetup</ObjectType>
                            <ActionName>1 - Module Header</ActionName>
                            <RepeaterValue>1</RepeaterValue>
                            <VariableReferences>
                                <VariableReference Index="1" Name=""/>
                            </VariableReferences>
                            <itemID></itemID>
                            <repoID></repoID>
                            <Source>0</Source>
                        </Automation>
                    </Header>
                    <Footer>
                        <Automation>
                            <ObjectName></ObjectName>
                            <LayerId>7f10d0cbed044e7c97fca9e2d6c7fd88</LayerId>
                            <ObjectType>1_ModuleSetup</ObjectType>
                            <ActionName>8 - Module Footer</ActionName>
                            <RepeaterValue>1</RepeaterValue>
                            <VariableReferences/>
                            <itemID></itemID>
                            <repoID></repoID>
                            <Source>0</Source>
                        </Automation>
                    </Footer>
                    <Join>
                        <Automation>
                            <ObjectName></ObjectName>
                            <LayerId>0</LayerId>
                            <ObjectType></ObjectType>
                            <ActionName></ActionName>
                            <RepeaterValue>1</RepeaterValue>
                            <VariableReferences/>
                            <itemID></itemID>
                            <repoID></repoID>
                            <Source>0</Source>
                        </Automation>
                    </Join>
                    <PathHeader>
                        <Automation>
                            <ObjectName></ObjectName>
                            <LayerId>7f10d0cbed044e7c97fca9e2d6c7fd88</LayerId>
                            <ObjectType>2_TestStep</ObjectType>
                            <ActionName>Begin TestCase</ActionName>
                            <RepeaterValue>1</RepeaterValue>
                            <VariableReferences/>
                            <itemID></itemID>
                            <repoID></repoID>
                            <Source>0</Source>
                        </Automation>
                    </PathHeader>
                    <PathFooter>
                        <Automation>
                            <ObjectName></ObjectName>
                            <LayerId>7f10d0cbed044e7c97fca9e2d6c7fd88</LayerId>
                            <ObjectType>2_TestStep</ObjectType>
                            <ActionName>End TestCase</ActionName>
                            <RepeaterValue>1</RepeaterValue>
                            <VariableReferences/>
                            <itemID></itemID>
                            <repoID></repoID>
                            <Source>0</Source>
                        </Automation>
                    </PathFooter>
                    <StepHeader>
                        <Automation>
                            <ObjectName></ObjectName>
                            <LayerId>7f10d0cbed044e7c97fca9e2d6c7fd88</LayerId>
                            <ObjectType>2_TestStep</ObjectType>
                            <ActionName>Begin TestModule</ActionName>
                            <RepeaterValue>1</RepeaterValue>
                            <VariableReferences/>
                            <itemID></itemID>
                            <repoID></repoID>
                            <Source>0</Source>
                        </Automation>
                    </StepHeader>
                    <StepFooter>
                        <Automation>
                            <ObjectName></ObjectName>
                            <LayerId>7f10d0cbed044e7c97fca9e2d6c7fd88</LayerId>
                            <ObjectType>2_TestStep</ObjectType>
                            <ActionName>End TestModule</ActionName>
                            <RepeaterValue>1</RepeaterValue>
                            <VariableReferences/>
                            <itemID></itemID>
                            <repoID></repoID>
                            <Source>0</Source>
                        </Automation>
                    </StepFooter>
                </PreviewHeaderFooter>
            </ExportSettings>
            <LayerVariables/>
        </AutomationLayer>
        <AutomationLayer>
            <Guid>89f30bbf351f46daaff2113204bdce59</Guid>
            <Name>Testsuite</Name>
            <Objects>
                <Object>
                    <ObjectType>Button</ObjectType>
                    <ObjectActions>
                        <Action ActionName="Click By Name" CodeSnippet=""/>
                    </ObjectActions>
                </Object>
            </Objects>
            <PreviewDetails>
                <SaveFileLocation></SaveFileLocation>
                <RunFileLocation></RunFileLocation>
                <EditLanguage>3</EditLanguage>
                <EditTheme>6</EditTheme>
                <EditorType>0</EditorType>
                <FromFileStructure>False</FromFileStructure>
                <MapFromBlockAttributes/>
            </PreviewDetails>
            <ExportSettings>
                <FileConfiguration>43</FileConfiguration>
                <FileNamingSystem>0</FileNamingSystem>
                <FileNameVariable></FileNameVariable>
                <FilePrefix></FilePrefix>
                <FileExtension></FileExtension>
                <ExtensionSettings/>
                <PreviewHeaderFooter>
                    <Header>
                        <Automation>
                            <ObjectName></ObjectName>
                            <LayerId>-99</LayerId>
                            <ObjectType></ObjectType>
                            <ActionName></ActionName>
                            <RepeaterValue>1</RepeaterValue>
                            <VariableReferences/>
                            <itemID></itemID>
                            <repoID></repoID>
                            <Source>0</Source>
                        </Automation>
                    </Header>
                    <Footer>
                        <Automation>
                            <ObjectName></ObjectName>
                            <LayerId>-99</LayerId>
                            <ObjectType></ObjectType>
                            <ActionName></ActionName>
                            <RepeaterValue>1</RepeaterValue>
                            <VariableReferences/>
                            <itemID></itemID>
                            <repoID></repoID>
                            <Source>0</Source>
                        </Automation>
                    </Footer>
                    <Join>
                        <Automation>
                            <ObjectName></ObjectName>
                            <LayerId>-99</LayerId>
                            <ObjectType></ObjectType>
                            <ActionName></ActionName>
                            <RepeaterValue>1</RepeaterValue>
                            <VariableReferences/>
                            <itemID></itemID>
                            <repoID></repoID>
                            <Source>0</Source>
                        </Automation>
                    </Join>
                    <PathHeader>
                        <Automation>
                            <ObjectName></ObjectName>
                            <LayerId>-99</LayerId>
                            <ObjectType></ObjectType>
                            <ActionName></ActionName>
                            <RepeaterValue>1</RepeaterValue>
                            <VariableReferences/>
                            <itemID></itemID>
                            <repoID></repoID>
                            <Source>0</Source>
                        </Automation>
                    </PathHeader>
                    <PathFooter>
                        <Automation>
                            <ObjectName></ObjectName>
                            <LayerId>-99</LayerId>
                            <ObjectType></ObjectType>
                            <ActionName></ActionName>
                            <RepeaterValue>1</RepeaterValue>
                            <VariableReferences/>
                            <itemID></itemID>
                            <repoID></repoID>
                            <Source>0</Source>
                        </Automation>
                    </PathFooter>
                    <StepHeader>
                        <Automation>
                            <ObjectName></ObjectName>
                            <LayerId>-99</LayerId>
                            <ObjectType></ObjectType>
                            <ActionName></ActionName>
                            <RepeaterValue>1</RepeaterValue>
                            <VariableReferences/>
                            <itemID></itemID>
                            <repoID></repoID>
                            <Source>0</Source>
                        </Automation>
                    </StepHeader>
                    <StepFooter>
                        <Automation>
                            <ObjectName></ObjectName>
                            <LayerId>-99</LayerId>
                            <ObjectType></ObjectType>
                            <ActionName></ActionName>
                            <RepeaterValue>1</RepeaterValue>
                            <VariableReferences/>
                            <itemID></itemID>
                            <repoID></repoID>
                            <Source>0</Source>
                        </Automation>
                    </StepFooter>
                </PreviewHeaderFooter>
            </ExportSettings>
            <LayerVariables/>
        </AutomationLayer>
    </AutomationLayers>
</AutomationConfiguration>
